[2019-11-05 10:42:34,851] [base.py:93] [base:get_response] [WARNING]- Not Found: /api/login/
[2019-11-05 10:42:34,853] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /api/login/ HTTP/1.1" 404 10184
[2019-11-05 10:42:34,945] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /favicon.ico HTTP/1.1" 302 0
[2019-11-05 10:42:34,997] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/E_fa.png HTTP/1.1" 404 1660
[2019-11-05 10:42:39,823] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /api/update_event HTTP/1.1" 301 0
[2019-11-05 10:42:39,827] [exception.py:118] [exception:handle_uncaught_exception] [ERROR]- Internal Server Error: /api/update_event/
Traceback (most recent call last):
  File "D:\python\lib\site-packages\django\core\handlers\exception.py", line 35, in inner
    response = get_response(request)
  File "D:\python\lib\site-packages\django\core\handlers\base.py", line 139, in _get_response
    "returned None instead." % (callback.__module__, view_name)
ValueError: The view guest.views_api.update_event didn't return an HttpResponse object. It returned None instead.
[2019-11-05 10:42:39,949] [basehttp.py:124] [basehttp:log_message] [ERROR]- "GET /api/update_event/ HTTP/1.1" 500 63779
[2019-11-05 10:49:23,460] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET / HTTP/1.1" 302 0
[2019-11-05 10:49:23,513] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /login_action/?next=/ HTTP/1.1" 200 6360
[2019-11-05 10:49:23,833] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET / HTTP/1.1" 302 0
[2019-11-05 10:49:23,833] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/admin/simpleui-x/fontawesome-free-5.8.1-web/css/all.min.css HTTP/1.1" 304 0
[2019-11-05 10:49:23,835] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/admin/simpleui-x/css/login.css?_=2.1 HTTP/1.1" 304 0
[2019-11-05 10:49:23,837] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/vendor/font-awesome/css/font-awesome.min.css HTTP/1.1" 304 0
[2019-11-05 10:49:23,837] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/admin/simpleui-x/particles/particles.js HTTP/1.1" 304 0
[2019-11-05 10:49:23,844] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/admin/simpleui-x/elementui/theme-chalk/index.css HTTP/1.1" 304 0
[2019-11-05 10:49:24,145] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/admin/simpleui-x/particles/app.js HTTP/1.1" 304 0
[2019-11-05 10:49:24,147] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /login_action/?next=/ HTTP/1.1" 200 6360
[2019-11-05 10:49:24,149] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/admin/simpleui-x/js/vue.min.js HTTP/1.1" 304 0
[2019-11-05 10:49:24,150] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/admin/simpleui-x/js/login.js HTTP/1.1" 304 0
[2019-11-05 10:49:24,150] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/admin/simpleui-x/elementui/index.js HTTP/1.1" 304 0
[2019-11-05 10:49:24,201] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/admin/simpleui-x/img/bg.svg HTTP/1.1" 304 0
[2019-11-05 10:49:24,585] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/vendor/font-awesome/fonts/fontawesome-webfont.woff2?v=4.7.0 HTTP/1.1" 304 0
[2019-11-05 10:49:24,835] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/E_fa.png HTTP/1.1" 404 1660
[2019-11-05 10:49:25,373] [views.py:205] [views:login_action] [INFO]- ---------地址来源-------------> /
[2019-11-05 10:49:25,374] [views.py:207] [views:login_action] [INFO]- 用户： lixiaofeng 登录成功！
[2019-11-05 10:49:25,376] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /login_action/ HTTP/1.1" 302 0
[2019-11-05 10:49:25,719] [views.py:96] [views:index] [INFO]- 同时在线人员：['127.0.0.1']
[2019-11-05 10:49:25,745] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET / HTTP/1.1" 200 29776
[2019-11-05 10:49:26,094] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/css/main.css HTTP/1.1" 304 0
[2019-11-05 10:49:26,098] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/vendor/linearicons/style.css HTTP/1.1" 304 0
[2019-11-05 10:49:26,100] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/css/demo.css HTTP/1.1" 304 0
[2019-11-05 10:49:26,106] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/vendor/bootstrap/css/bootstrap.min.css HTTP/1.1" 304 0
[2019-11-05 10:49:26,120] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/vendor/jquery/jquery.min.js HTTP/1.1" 304 0
[2019-11-05 10:49:26,121] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/css/loading.css HTTP/1.1" 404 1669
[2019-11-05 10:49:26,468] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/userImg.jpg HTTP/1.1" 404 1669
[2019-11-05 10:49:26,470] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/vendor/jquery-slimscroll/jquery.slimscroll.min.js HTTP/1.1" 304 0
[2019-11-05 10:49:26,470] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/scripts/klorofil-common.js HTTP/1.1" 304 0
[2019-11-05 10:49:26,475] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/logo.png HTTP/1.1" 404 1660
[2019-11-05 10:49:26,477] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/vendor/bootstrap/js/bootstrap.min.js HTTP/1.1" 304 0
[2019-11-05 10:49:26,484] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/echarts/bmap.min.js HTTP/1.1" 304 0
[2019-11-05 10:49:26,805] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/echarts/china.js HTTP/1.1" 304 0
[2019-11-05 10:49:26,807] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/echarts/world.js HTTP/1.1" 304 0
[2019-11-05 10:49:26,810] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/echarts/echarts.min.js HTTP/1.1" 304 0
[2019-11-05 10:49:26,815] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/echarts/dataTool.min.js HTTP/1.1" 304 0
[2019-11-05 10:49:29,114] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /mocks/api/ HTTP/1.1" 200 15098
[2019-11-05 10:49:52,003] [base.py:93] [base:get_response] [WARNING]- Not Found: /api/login/
[2019-11-05 10:49:52,008] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /api/login/ HTTP/1.1" 404 10184
[2019-11-05 10:49:53,545] [views.py:96] [views:index] [INFO]- 同时在线人员：['127.0.0.1']
[2019-11-05 10:49:53,548] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET / HTTP/1.1" 200 29776
[2019-11-05 10:49:53,569] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/css/loading.css HTTP/1.1" 404 1669
[2019-11-05 10:49:53,894] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/logo.png HTTP/1.1" 404 1660
[2019-11-05 10:49:53,895] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/userImg.jpg HTTP/1.1" 404 1669
[2019-11-05 10:50:03,034] [base.py:93] [base:get_response] [WARNING]- Not Found: /api/event
[2019-11-05 10:50:03,035] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /api/event HTTP/1.1" 404 10181
[2019-11-05 10:50:21,201] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /api/event_manage HTTP/1.1" 301 0
[2019-11-05 10:50:21,268] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /api/event_manage/ HTTP/1.1" 200 2882
[2019-11-05 10:51:07,750] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /api/event_manage/ HTTP/1.1" 200 2882
[2019-11-05 10:53:18,489] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /api/event_manage/ HTTP/1.1" 200 3292
[2019-11-05 10:54:13,253] [exception.py:118] [exception:handle_uncaught_exception] [ERROR]- Internal Server Error: /api/update_event/
Traceback (most recent call last):
  File "D:\python\lib\site-packages\django\core\handlers\exception.py", line 35, in inner
    response = get_response(request)
  File "D:\python\lib\site-packages\django\core\handlers\base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\python\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\EasyTest\guest\views_api.py", line 56, in update_event
    info = request.PUT.get('info', {})
AttributeError: 'WSGIRequest' object has no attribute 'PUT'
[2019-11-05 10:54:13,324] [basehttp.py:124] [basehttp:log_message] [ERROR]- "PUT /api/update_event/ HTTP/1.1" 500 70339
[2019-11-05 10:58:05,815] [basehttp.py:124] [basehttp:log_message] [INFO]- "PUT /api/update_event/ HTTP/1.1" 200 50
[2019-11-05 10:59:09,268] [basehttp.py:124] [basehttp:log_message] [INFO]- "PUT /api/update_event/ HTTP/1.1" 200 50
[2019-11-05 11:01:05,151] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /api/sign_index/1 HTTP/1.1" 301 0
[2019-11-05 11:01:05,213] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /api/sign_index/1/ HTTP/1.1" 200 2272
[2019-11-05 11:01:07,035] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /api/guest_manage/ HTTP/1.1" 200 2893
[2019-11-05 11:01:08,458] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /api/event_manage/ HTTP/1.1" 200 3292
[2019-11-05 11:09:35,876] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /api/update_event/ HTTP/1.1" 200 50
[2019-11-05 11:10:40,712] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /api/update_event/ HTTP/1.1" 200 50
[2019-11-05 11:11:19,635] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /api/update_event/ HTTP/1.1" 200 50
[2019-11-05 11:13:54,433] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /api/update_event/ HTTP/1.1" 200 50
[2019-11-05 11:14:11,439] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /api/update_event/ HTTP/1.1" 200 50
[2019-11-05 11:17:56,938] [exception.py:118] [exception:handle_uncaught_exception] [ERROR]- Internal Server Error: /api/update_event/
Traceback (most recent call last):
  File "D:\python\lib\site-packages\django\core\handlers\exception.py", line 35, in inner
    response = get_response(request)
  File "D:\python\lib\site-packages\django\core\handlers\base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\python\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\EasyTest\guest\views_api.py", line 57, in update_event
    req = json.loads(request.body)
  File "D:\python\lib\json\__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "D:\python\lib\json\decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "D:\python\lib\json\decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
[2019-11-05 11:17:57,061] [basehttp.py:124] [basehttp:log_message] [ERROR]- "POST /api/update_event/ HTTP/1.1" 500 86584
[2019-11-05 11:18:37,519] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /api/update_event/ HTTP/1.1" 200 50
[2019-11-05 11:19:08,484] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /api/update_event/ HTTP/1.1" 200 50
[2019-11-05 11:19:27,966] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /api/update_event/ HTTP/1.1" 200 50
[2019-11-05 11:28:55,607] [views_api.py:80] [views_api:update_event] [INFO]- 默认服务==>  update_event，发布会 1 修改成功！
[2019-11-05 11:28:55,609] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /api/update_event/ HTTP/1.1" 200 50
[2019-11-05 12:45:30,514] [views.py:96] [views:index] [INFO]- 同时在线人员：['127.0.0.1']
[2019-11-05 12:45:30,521] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /index/ HTTP/1.1" 200 29776
[2019-11-05 12:45:30,571] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/css/loading.css HTTP/1.1" 404 1669
[2019-11-05 12:45:30,688] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/logo.png HTTP/1.1" 404 1660
[2019-11-05 12:45:30,886] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/userImg.jpg HTTP/1.1" 404 1669
[2019-11-05 12:45:38,455] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /base/interface/ HTTP/1.1" 200 43584
[2019-11-05 12:45:38,479] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/css/loading.css HTTP/1.1" 404 1669
[2019-11-05 12:45:38,635] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/logo.png HTTP/1.1" 404 1660
[2019-11-05 12:45:38,786] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/userImg.jpg HTTP/1.1" 404 1669
[2019-11-05 12:45:38,795] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /static/admin/img/icon-deletelink.svg HTTP/1.1" 304 0
[2019-11-05 12:45:39,926] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /base/interface_update/?if_id=445 HTTP/1.1" 200 43963
[2019-11-05 12:45:39,948] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/css/loading.css HTTP/1.1" 404 1669
[2019-11-05 12:45:40,132] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/logo.png HTTP/1.1" 404 1660
[2019-11-05 12:45:40,254] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/userImg.jpg HTTP/1.1" 404 1669
[2019-11-05 12:46:01,216] [views.py:698] [views:interface_update] [INFO]- edit interface  测试body参数接口  success.  interface info： guest项目 // /update_event/ // post // json // 0 //  // [] // [{"var_name": "info", "var_remark": ""}] // 0 //  
[2019-11-05 12:46:01,218] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /base/interface_update/ HTTP/1.1" 302 0
[2019-11-05 12:46:01,477] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /base/interface/ HTTP/1.1" 200 43584
[2019-11-05 12:46:02,841] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /base/interface/ HTTP/1.1" 200 43584
[2019-11-05 12:46:03,088] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/css/loading.css HTTP/1.1" 404 1669
[2019-11-05 12:46:03,169] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/logo.png HTTP/1.1" 404 1660
[2019-11-05 12:46:03,169] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/userImg.jpg HTTP/1.1" 404 1669
[2019-11-05 12:46:05,696] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /base/case/ HTTP/1.1" 200 49170
[2019-11-05 12:46:05,715] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/css/loading.css HTTP/1.1" 404 1669
[2019-11-05 12:46:05,915] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/logo.png HTTP/1.1" 404 1660
[2019-11-05 12:46:06,018] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/userImg.jpg HTTP/1.1" 404 1669
[2019-11-05 12:46:08,337] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /base/case_update/?case_id=45 HTTP/1.1" 200 58599
[2019-11-05 12:46:08,364] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/css/loading.css HTTP/1.1" 404 1669
[2019-11-05 12:46:08,541] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/logo.png HTTP/1.1" 404 1660
[2019-11-05 12:46:08,663] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/userImg.jpg HTTP/1.1" 404 1669
[2019-11-05 12:46:09,729] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /base/findata/?case_id=45&type=get_case_by_case_id HTTP/1.1" 200 794
[2019-11-05 12:46:55,147] [views.py:959] [views:case_update] [INFO]- edit case   测试body参数接口用例  success. case info: guest项目 //  // [{"if_id":"445","if_name":"测试body参数接口","header":{},"body":{"inifo":"{ \"eid\": 11, \"name\": \"keep手环发布会\", \"limit\": \"2001\", \"status\": \"1\", \"address\": \"北京顺义\", \"start_time\": \"2019-11-30 10:53:51\",}"},"extract":{},"validators":[{"check":"message","comparator":"eq","expect":"update event success"}],"url":"/post_body/"}]
[2019-11-05 12:46:55,151] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /base/case_update/ HTTP/1.1" 302 0
[2019-11-05 12:46:55,427] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /base/case/ HTTP/1.1" 200 49170
[2019-11-05 12:46:56,077] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /base/case/ HTTP/1.1" 200 49170
[2019-11-05 12:46:56,345] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/css/loading.css HTTP/1.1" 404 1669
[2019-11-05 12:46:56,405] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/logo.png HTTP/1.1" 404 1660
[2019-11-05 12:46:56,406] [basehttp.py:124] [basehttp:log_message] [WARNING]- "GET /static/img/userImg.jpg HTTP/1.1" 404 1669
[2019-11-05 12:46:58,606] [basehttp.py:124] [basehttp:log_message] [INFO]- "GET /base/findata/?prj_id=2&type=get_env_by_prj_id HTTP/1.1" 200 268
[2019-11-05 12:46:59,591] [views.py:1123] [views:case_run] [INFO]- 用户 lixiaofeng 在 2 环境 运行用例 45 .
[2019-11-05 12:46:59,624] [execute.py:108] [execute:test_case] [INFO]- interface response data: {'class_name': 'Test_execute', 'func_name': 'test_case', 'method_doc': '接口测试用例', 'case_id': '45', 'result': 'error', 'case_name': '测试body参数接口用例', 'step_list': [{'url': 'http://www.easytest.xyz/api/update_event/', 'header': {}, 'body': {'inifo': {'eid': 11, 'name': 'keep手环发布会', 'limit': '2001', 'status': '1', 'address': '北京顺义', 'start_time': '2019-11-3010:53:51'}}, 'if_id': '445', 'if_name': '测试body参数接口', 'method': 'post', 'data_type': 'json', 'res_status_code': 200, 'result': 'error', 'checkpoint': '', 'res_content': '解析接口返回值出错，请核实原因.  详细报错信息： invalid syntax (<string>, line 1)', 'error': '解析返回值错误！请前往【用例管理】页面检查相关参数配置！', 'msg': '解析返回值错误！请前往【用例管理】页面检查相关参数配置！'}]}
[2019-11-05 12:46:59,630] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /base/case_run/ HTTP/1.1" 200 1202
[2019-11-05 12:48:23,343] [views.py:1123] [views:case_run] [INFO]- 用户 lixiaofeng 在 2 环境 运行用例 45 .
[2019-11-05 12:48:23,494] [execute.py:108] [execute:test_case] [INFO]- interface response data: {'class_name': 'Test_execute', 'func_name': 'test_case', 'method_doc': '接口测试用例', 'case_id': '45', 'result': 'error', 'case_name': '测试body参数接口用例', 'step_list': [{'url': 'http://www.easytest.xyz/api/update_event/', 'header': {}, 'body': {'inifo': {'eid': 11, 'name': 'keep手环发布会', 'limit': '2001', 'status': '1', 'address': '北京顺义', 'start_time': '2019-11-3010:53:51'}}, 'if_id': '445', 'if_name': '测试body参数接口', 'method': 'post', 'data_type': 'json', 'res_status_code': 500, 'result': 'error', 'checkpoint': '', 'res_content': '解析接口返回值出错，请核实原因.  详细报错信息： invalid syntax (<string>, line 1)', 'error': '解析返回值错误！请前往【用例管理】页面检查相关参数配置！', 'msg': '解析返回值错误！请前往【用例管理】页面检查相关参数配置！'}]}
[2019-11-05 12:48:23,502] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /base/case_run/ HTTP/1.1" 200 1202
[2019-11-05 12:49:21,205] [views.py:1123] [views:case_run] [INFO]- 用户 lixiaofeng 在 2 环境 运行用例 45 .
[2019-11-05 12:49:21,221] [public.py:461] [public:call_interface] [INFO]- ========interface params==============> http://www.easytest.xyz/api/update_event/ {} {'inifo': {'eid': 11, 'name': 'keep手环发布会', 'limit': '2001', 'status': '1', 'address': '北京顺义', 'start_time': '2019-11-3010:53:51'}} json
[2019-11-05 12:49:21,237] [execute.py:108] [execute:test_case] [INFO]- interface response data: {'class_name': 'Test_execute', 'func_name': 'test_case', 'method_doc': '接口测试用例', 'case_id': '45', 'result': 'error', 'case_name': '测试body参数接口用例', 'step_list': [{'url': 'http://www.easytest.xyz/api/update_event/', 'header': {}, 'body': {'inifo': {'eid': 11, 'name': 'keep手环发布会', 'limit': '2001', 'status': '1', 'address': '北京顺义', 'start_time': '2019-11-3010:53:51'}}, 'if_id': '445', 'if_name': '测试body参数接口', 'method': 'post', 'data_type': 'json', 'res_status_code': 200, 'result': 'error', 'checkpoint': '', 'res_content': '解析接口返回值出错，请核实原因.  详细报错信息： invalid syntax (<string>, line 1)', 'error': '解析返回值错误！请前往【用例管理】页面检查相关参数配置！', 'msg': '解析返回值错误！请前往【用例管理】页面检查相关参数配置！'}]}
[2019-11-05 12:49:21,242] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /base/case_run/ HTTP/1.1" 200 1202
[2019-11-05 12:50:23,273] [views.py:1123] [views:case_run] [INFO]- 用户 lixiaofeng 在 2 环境 运行用例 45 .
[2019-11-05 12:50:23,287] [public.py:461] [public:call_interface] [INFO]- ========interface params==============> http://www.easytest.xyz/api/update_event/ {} {'inifo': {'eid': 11, 'name': 'keep手环发布会', 'limit': '2001', 'status': '1', 'address': '北京顺义', 'start_time': '2019-11-3010:53:51'}} json
[2019-11-05 12:50:23,352] [public.py:482] [public:call_interface] [INFO]- ========接口返回信息==============> 500 <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>TypeError
          at /api/update_event/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
  </style>
  
  <script type="text/javascript">
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('table.vars'));
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>TypeError
       at /api/update_event/</h1>
  <pre class="exception_value">the JSON object must be str, not &#39;bytes&#39;</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://myApp/api/update_event/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>2.0.3</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>TypeError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>the JSON object must be str, not &#39;bytes&#39;</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/usr/lib/python3.5/json/__init__.py in loads, line 312</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/lixiaofeng/.virtualenvs/py/bin/python</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.5.2</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;/var/test_app/EasyTest&#39;,
 &#39;/home/lixiaofeng/.virtualenvs/py/bin&#39;,
 &#39;/home/lixiaofeng/.virtualenvs/py/lib/python35.zip&#39;,
 &#39;/home/lixiaofeng/.virtualenvs/py/lib/python3.5&#39;,
 &#39;/home/lixiaofeng/.virtualenvs/py/lib/python3.5/plat-x86_64-linux-gnu&#39;,
 &#39;/home/lixiaofeng/.virtualenvs/py/lib/python3.5/lib-dynload&#39;,
 &#39;/usr/lib/python3.5&#39;,
 &#39;/usr/lib/python3.5/plat-x86_64-linux-gnu&#39;,
 &#39;/home/lixiaofeng/.virtualenvs/py/lib/python3.5/site-packages&#39;,
 &#39;/var/test_app/EasyTest&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>星期二, 5 十一月 2019 12:50:23 +0800</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          <code>/home/lixiaofeng/.virtualenvs/py/lib/python3.5/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>

          
            <div class="context" id="c140276842550536">
              
                <ol start="28" class="pre-context" id="pre140276842550536">
                
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>
                
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>
                
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>    can rely on getting a response instead of an exception.</pre></li>
                
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>    @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>    def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="35" class="context-line">
                <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>            response = get_response(request)</pre> <span>...</span></li>
              </ol>
              
                <ol start='36' class="post-context" id="post140276842550536">
                  
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>            response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre>    return inner</pre></li>
                  
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140276842550536', 'post140276842550536')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140276842550536')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140276842550536">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>TypeError(&quot;the JSON object must be str, not &#39;bytes&#39;&quot;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f94cedd4828&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#39;/api/update_event/&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/lixiaofeng/.virtualenvs/py/lib/python3.5/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140276842551944">
              
                <ol start="121" class="pre-context" id="pre140276842551944">
                
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre></pre></li>
                
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>            except Exception as e:</pre></li>
                
                </ol>
              
              <ol start="128" class="context-line">
                <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>                response = self.process_exception_by_middleware(e, request)</pre> <span>...</span></li>
              </ol>
              
                <ol start='129' class="post-context" id="post140276842551944">
                  
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>                view_name = callback.__name__</pre></li>
                  
                  <li onclick="toggle('pre140276842551944', 'post140276842551944')"><pre>            else:                                           # CBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140276842551944')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140276842551944">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function update_event at 0x7f94c028f8c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#39;/api/update_event/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;URLResolver &#39;EasyTest.urls&#39; (None:None) &#39;^/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=guest.views_api.update_event, args=(), kwargs={}, url_name=update_event, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f94cedd4828&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function update_event at 0x7f94c028f8c8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/lixiaofeng/.virtualenvs/py/lib/python3.5/site-packages/django/core/handlers/base.py</code> in <code>_get_response</code>

          
            <div class="context" id="c140276842550600">
              
                <ol start="119" class="pre-context" id="pre140276842550600">
                
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>            response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>            if response:</pre></li>
                
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>                break</pre></li>
                
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre></pre></li>
                
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="126" class="context-line">
                <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li>
              </ol>
              
                <ol start='127' class="post-context" id="post140276842550600">
                  
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>        if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140276842550600', 'post140276842550600')"><pre>            if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140276842550600')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140276842550600">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function update_event at 0x7f94c028f8c8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#39;/api/update_event/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;URLResolver &#39;EasyTest.urls&#39; (None:None) &#39;^/&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=guest.views_api.update_event, args=(), kwargs={}, url_name=update_event, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f94cedd4828&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function update_event at 0x7f94c028f8c8&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/var/test_app/EasyTest/guest/views_api.py</code> in <code>update_event</code>

          
            <div class="context" id="c140276842551624">
              
                <ol start="50" class="pre-context" id="pre140276842551624">
                
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre>    log.info(&#39;1号服务器==&gt;  add_event，发布会添加成功！&#39;)</pre></li>
                
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre>    return JsonResponse({&#39;status&#39;: 200, &#39;message&#39;: &#39;add event success&#39;})</pre></li>
                
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre></pre></li>
                
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre></pre></li>
                
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre># 修改发布会接口</pre></li>
                
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre>def update_event(request):</pre></li>
                
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre>    if request.method == &#39;POST&#39;:</pre></li>
                
                </ol>
              
              <ol start="57" class="context-line">
                <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre>        req = json.loads(request.body)</pre> <span>...</span></li>
              </ol>
              
                <ol start='58' class="post-context" id="post140276842551624">
                  
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre>        info = req.get(&#39;info&#39;, {})</pre></li>
                  
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre>        eid = info.get(&#39;eid&#39;, &#39;&#39;)</pre></li>
                  
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre>        name = info.get(&#39;name&#39;, &#39;&#39;)</pre></li>
                  
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre>        limit = info.get(&#39;limit&#39;, &#39;&#39;)</pre></li>
                  
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre>        status = info.get(&#39;status&#39;, &#39;&#39;)</pre></li>
                  
                  <li onclick="toggle('pre140276842551624', 'post140276842551624')"><pre>        address = info.get(&#39;address&#39;, &#39;&#39;)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140276842551624')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140276842551624">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#39;/api/update_event/&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/usr/lib/python3.5/json/__init__.py</code> in <code>loads</code>

          
            <div class="context" id="c140276842551368">
              
                <ol start="305" class="pre-context" id="pre140276842551368">
                
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>    kwarg; otherwise ``JSONDecoder`` is used.</pre></li>
                
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre></pre></li>
                
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>    The ``encoding`` argument is ignored and deprecated.</pre></li>
                
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre></pre></li>
                
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>    if not isinstance(s, str):</pre></li>
                
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>        raise TypeError(&#39;the JSON object must be str, not {!r}&#39;.format(</pre></li>
                
                </ol>
              
              <ol start="312" class="context-line">
                <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>                            s.__class__.__name__))</pre> <span>...</span></li>
              </ol>
              
                <ol start='313' class="post-context" id="post140276842551368">
                  
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>    if s.startswith(u&#39;\ufeff&#39;):</pre></li>
                  
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>        raise JSONDecodeError(&quot;Unexpected UTF-8 BOM (decode using utf-8-sig)&quot;,</pre></li>
                  
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>                              s, 0)</pre></li>
                  
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>    if (cls is None and object_hook is None and</pre></li>
                  
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>            parse_int is None and parse_float is None and</pre></li>
                  
                  <li onclick="toggle('pre140276842551368', 'post140276842551368')"><pre>            parse_constant is None and object_pairs_hook is None and not kw):</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140276842551368')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140276842551368">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>encoding</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>kw</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>object_hook</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>object_pairs_hook</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>parse_constant</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>parse_float</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>parse_int</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>s</td>
                    <td class="code"><pre>(b&#39;{&quot;inifo&quot;: {&quot;eid&quot;: 11, &quot;name&quot;: &quot;keep\\u624b\\u73af\\u53d1\\u5e03\\u4f1a&quot;, &#39;
 b&#39;&quot;limit&quot;: &quot;2001&quot;, &quot;status&quot;: &quot;1&quot;, &quot;address&quot;: &quot;\\u5317\\u4eac\\u987a\\u4e49&quot;, &quot;&#39;
 b&#39;start_time&quot;: &quot;2019-11-3010:53:51&quot;}}&#39;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="TypeError at /api/update_event/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://myApp/api/update_event/

Django Version: 2.0.3
Python Version: 3.5.2
Installed Applications:
[&#39;simpleui&#39;,
 &#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;base&#39;,
 &#39;guest&#39;,
 &#39;mocks&#39;,
 &#39;djcelery&#39;,
 &#39;bootstrap3&#39;,
 &#39;rest_framework&#39;,
 &#39;rest_framework_swagger&#39;]
Installed Middleware:
[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]



Traceback:

File "/home/lixiaofeng/.virtualenvs/py/lib/python3.5/site-packages/django/core/handlers/exception.py" in inner
  35.             response = get_response(request)

File "/home/lixiaofeng/.virtualenvs/py/lib/python3.5/site-packages/django/core/handlers/base.py" in _get_response
  128.                 response = self.process_exception_by_middleware(e, request)

File "/home/lixiaofeng/.virtualenvs/py/lib/python3.5/site-packages/django/core/handlers/base.py" in _get_response
  126.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "/var/test_app/EasyTest/guest/views_api.py" in update_event
  57.         req = json.loads(request.body)

File "/usr/lib/python3.5/json/__init__.py" in loads
  312.                             s.__class__.__name__))

Exception Type: TypeError at /api/update_event/
Exception Value: the JSON object must be str, not &#39;bytes&#39;
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#39;175&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#39;application/json&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#39;*/*&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#39;gzip, deflate&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CONNECTION</td>
          <td class="code"><pre>&#39;close&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;myApp&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#39;python-requests/2.18.4&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#39;117.119.98.42&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#39;/api/update_event/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>RAW_URI</td>
          <td class="code"><pre>&#39;/api/update_event/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#39;127.0.0.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><pre>&#39;52516&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;POST&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#39;127.0.0.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;9001&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>gunicorn.socket</td>
          <td class="code"><pre>&lt;gevent._socket3.socket object, fd=18, family=2, type=2049, proto=0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f94bf6f2ac8&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;gunicorn.http.body.Body object at 0x7f94bf6f29b0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>EasyTest.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#39;*&#39;, &#39;39.105.136.231&#39;, &#39;127.0.0.1&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#39;auth.User&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#39;/var/test_app/EasyTest&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BROKER_URL</td>
          <td class="code"><pre>&#39;redis://127.0.0.1:6379/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django_redis.cache.RedisCache&#39;,
             &#39;LOCATION&#39;: &#39;redis://127.0.0.1:6379/2&#39;,
             &#39;OPTIONS&#39;: {&#39;CLIENT_CLASS&#39;: &#39;django_redis.client.DefaultClient&#39;,
                         &#39;COMPRESS_COMPRESSOR&#39;: &lt;built-in function compress&gt;,
                         &#39;COMPRESS_DECOMPRESSOR&#39;: &lt;built-in function decompress&gt;,
                         &#39;COMPRESS_DECOMPRESSOR_ERROR&#39;: &lt;class &#39;zlib.error&#39;&gt;,
                         &#39;PICKLE_VERSION&#39;: -1}}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CELERYBEAT_SCHEDULE</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>CELERYBEAT_SCHEDULER</td>
          <td class="code"><pre>&#39;djcelery.schedulers.DatabaseScheduler&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_IMPORTS</td>
          <td class="code"><pre>&#39;base.tasks&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_TIMEZONE</td>
          <td class="code"><pre>&#39;Asia/Shanghai&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#39;csrftoken&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
             &#39;AUTOCOMMIT&#39;: True,
             &#39;CONN_MAX_AGE&#39;: 0,
             &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
             &#39;HOST&#39;: &#39;127.0.0.1&#39;,
             &#39;NAME&#39;: &#39;easytest&#39;,
             &#39;OPTIONS&#39;: {},
             &#39;PASSWORD&#39;: &#39;********************&#39;,
             &#39;PORT&#39;: &#39;3306&#39;,
             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,
                      &#39;COLLATION&#39;: None,
                      &#39;MIRROR&#39;: None,
                      &#39;NAME&#39;: None},
             &#39;TIME_ZONE&#39;: None,
             &#39;USER&#39;: &#39;root&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y, P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,
 &#39;%Y-%m-%d %H:%M:%S.%f&#39;,
 &#39;%Y-%m-%d %H:%M&#39;,
 &#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y %H:%M:%S&#39;,
 &#39;%m/%d/%Y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%Y %H:%M&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y %H:%M:%S&#39;,
 &#39;%m/%d/%y %H:%M:%S.%f&#39;,
 &#39;%m/%d/%y %H:%M&#39;,
 &#39;%m/%d/%y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%Y-%m-%d&#39;,
 &#39;%m/%d/%Y&#39;,
 &#39;%m/%d/%y&#39;,
 &#39;%b %d %Y&#39;,
 &#39;%b %d, %Y&#39;,
 &#39;%d %b %Y&#39;,
 &#39;%d %b, %Y&#39;,
 &#39;%B %d %Y&#39;,
 &#39;%B %d, %Y&#39;,
 &#39;%d %B %Y&#39;,
 &#39;%d %B, %Y&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#39;.&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#39;webmaster@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#39;localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#39;[Django] &#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#39;simpleui&#39;,
 &#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;base&#39;,
 &#39;guest&#39;,
 &#39;mocks&#39;,
 &#39;djcelery&#39;,
 &#39;bootstrap3&#39;,
 &#39;rest_framework&#39;,
 &#39;rest_framework_swagger&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#39;af&#39;, &#39;Afrikaans&#39;),
 (&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;ast&#39;, &#39;Asturian&#39;),
 (&#39;az&#39;, &#39;Azerbaijani&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;be&#39;, &#39;Belarusian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;br&#39;, &#39;Breton&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;dsb&#39;, &#39;Lower Sorbian&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;en-au&#39;, &#39;Australian English&#39;),
 (&#39;en-gb&#39;, &#39;British English&#39;),
 (&#39;eo&#39;, &#39;Esperanto&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
 (&#39;es-co&#39;, &#39;Colombian Spanish&#39;),
 (&#39;es-mx&#39;, &#39;Mexican Spanish&#39;),
 (&#39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
 (&#39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gd&#39;, &#39;Scottish Gaelic&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hsb&#39;, &#39;Upper Sorbian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;ia&#39;, &#39;Interlingua&#39;),
 (&#39;id&#39;, &#39;Indonesian&#39;),
 (&#39;io&#39;, &#39;Ido&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;kab&#39;, &#39;Kabyle&#39;),
 (&#39;kk&#39;, &#39;Kazakh&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lb&#39;, &#39;Luxembourgish&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;ml&#39;, &#39;Malayalam&#39;),
 (&#39;mn&#39;, &#39;Mongolian&#39;),
 (&#39;mr&#39;, &#39;Marathi&#39;),
 (&#39;my&#39;, &#39;Burmese&#39;),
 (&#39;nb&#39;, &#39;Norwegian Bokmål&#39;),
 (&#39;ne&#39;, &#39;Nepali&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
 (&#39;os&#39;, &#39;Ossetic&#39;),
 (&#39;pa&#39;, &#39;Punjabi&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;sw&#39;, &#39;Swahili&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;tt&#39;, &#39;Tatar&#39;),
 (&#39;udm&#39;, &#39;Udmurt&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;ur&#39;, &#39;Urdu&#39;),
 (&#39;vi&#39;, &#39;Vietnamese&#39;),
 (&#39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#39;zh-Hans&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#39;django_language&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{&#39;disable_existing_loggers&#39;: True,
 &#39;filters&#39;: {},
 &#39;formatters&#39;: {&#39;simple&#39;: {&#39;format&#39;: &#39;%(levelname)s %(message)s&#39;},
                &#39;standard&#39;: {&#39;format&#39;: &#39;[%(asctime)s] &#39;
                                       &#39;[%(filename)s:%(lineno)d] &#39;
                                       &#39;[%(module)s:%(funcName)s] &#39;
                                       &#39;[%(levelname)s]- %(message)s&#39;}},
 &#39;handlers&#39;: {&#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;,
                          &#39;formatter&#39;: &#39;standard&#39;,
                          &#39;level&#39;: &#39;DEBUG&#39;},
              &#39;default&#39;: {&#39;backupCount&#39;: 5,
                          &#39;class&#39;: &#39;logging.handlers.RotatingFileHandler&#39;,
                          &#39;encoding&#39;: &#39;utf-8&#39;,
                          &#39;filename&#39;: &#39;/var/test_app/EasyTest/logs/all-2019-11-05.log&#39;,
                          &#39;formatter&#39;: &#39;standard&#39;,
                          &#39;level&#39;: &#39;INFO&#39;,
                          &#39;maxBytes&#39;: 5242880},
              &#39;error&#39;: {&#39;backupCount&#39;: 5,
                        &#39;class&#39;: &#39;logging.handlers.RotatingFileHandler&#39;,
                        &#39;encoding&#39;: &#39;utf-8&#39;,
                        &#39;filename&#39;: &#39;/var/test_app/EasyTest/logs/error-2019-11-05.log&#39;,
                        &#39;formatter&#39;: &#39;standard&#39;,
                        &#39;level&#39;: &#39;ERROR&#39;,
                        &#39;maxBytes&#39;: 5242880},
              &#39;info&#39;: {&#39;backupCount&#39;: 5,
                       &#39;class&#39;: &#39;logging.handlers.RotatingFileHandler&#39;,
                       &#39;encoding&#39;: &#39;utf-8&#39;,
                       &#39;filename&#39;: &#39;/var/test_app/EasyTest/logs/info-2019-11-05.log&#39;,
                       &#39;formatter&#39;: &#39;standard&#39;,
                       &#39;level&#39;: &#39;INFO&#39;,
                       &#39;maxBytes&#39;: 5242880}},
 &#39;loggers&#39;: {&#39;django&#39;: {&#39;handlers&#39;: [&#39;default&#39;, &#39;console&#39;],
                        &#39;level&#39;: &#39;INFO&#39;,
                        &#39;propagate&#39;: False},
             &#39;log&#39;: {&#39;handlers&#39;: [&#39;error&#39;, &#39;info&#39;, &#39;console&#39;, &#39;default&#39;],
                     &#39;level&#39;: &#39;INFO&#39;,
                     &#39;propagate&#39;: True}},
 &#39;version&#39;: 1}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#39;logging.config.dictConfig&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#39;/accounts/profile/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#39;/login_action/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#39;/var/test_app/EasyTest/media&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#39;/media/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#39;F j&#39;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>REDIS</td>
          <td class="code"><pre>{&#39;db&#39;: &#39;2&#39;, &#39;host&#39;: &#39;localhost&#39;, &#39;port&#39;: &#39;6379&#39;}</pre></td>
        </tr>
      
        <tr>
          <td>REST_FRAMEWORK</td>
          <td class="code"><pre>{&#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: (&#39;rest_framework.authentication.TokenAuthentication&#39;,),
 &#39;DEFAULT_PERMISSION_CLASSES&#39;: (&#39;rest_framework.permissions.AllowAny&#39;,),
 &#39;PAGINATE_BY&#39;: 10}</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#39;EasyTest.urls&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#39;root@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>18000</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#39;sessionid&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#39;django.contrib.sessions.backends.cache&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;EasyTest.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SIMPLEUI_HOME_ICON</td>
          <td class="code"><pre>&#39;fa fa-user&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SIMPLEUI_STATIC_OFFLINE</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[&#39;/var/test_app/EasyTest/static&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
 &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#39;/var/static/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#39;/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SWAGGER_SETTINGS</td>
          <td class="code"><pre>{&#39;APIS_SORTER&#39;: &#39;********************&#39;,
 &#39;JSON_EDITOR&#39;: True,
 &#39;LOGIN_URL&#39;: &#39;rest_framework:login&#39;,
 &#39;LOGOUT_URL&#39;: &#39;rest_framework:logout&#39;,
 &#39;OPERATIONS_SORTER&#39;: &#39;alpha&#39;,
 &#39;SECURITY_DEFINITIONS&#39;: {&#39;basic&#39;: {&#39;type&#39;: &#39;basic&#39;}},
 &#39;VALIDATOR_URL&#39;: None}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#39;APP_DIRS&#39;: True,
  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
  &#39;DIRS&#39;: [&#39;/var/test_app/EasyTest/templates&#39;],
  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.debug&#39;,
                                     &#39;django.template.context_processors.request&#39;,
                                     &#39;django.contrib.auth.context_processors.auth&#39;,
                                     &#39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#39;,&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#39;P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#39;Asia/Shanghai&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#39;EasyTest.wsgi.application&#39;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#39;SAMEORIGIN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#39;F Y&#39;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

[2019-11-05 12:50:23,389] [execute.py:108] [execute:test_case] [INFO]- interface response data: {'class_name': 'Test_execute', 'func_name': 'test_case', 'method_doc': '接口测试用例', 'case_id': '45', 'result': 'error', 'case_name': '测试body参数接口用例', 'step_list': [{'url': 'http://www.easytest.xyz/api/update_event/', 'header': {}, 'body': {'inifo': {'eid': 11, 'name': 'keep手环发布会', 'limit': '2001', 'status': '1', 'address': '北京顺义', 'start_time': '2019-11-3010:53:51'}}, 'if_id': '445', 'if_name': '测试body参数接口', 'method': 'post', 'data_type': 'json', 'res_status_code': 500, 'result': 'error', 'checkpoint': '', 'res_content': '解析接口返回值出错，请核实原因.  详细报错信息： invalid syntax (<string>, line 1)', 'error': '解析返回值错误！请前往【用例管理】页面检查相关参数配置！', 'msg': '解析返回值错误！请前往【用例管理】页面检查相关参数配置！'}]}
[2019-11-05 12:50:23,394] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /base/case_run/ HTTP/1.1" 200 1202
[2019-11-05 12:52:08,973] [views_api.py:79] [views_api:update_event] [INFO]- 默认服务==>  update_event，发布会 1 修改成功！
[2019-11-05 12:52:08,976] [basehttp.py:124] [basehttp:log_message] [INFO]- "POST /api/update_event/ HTTP/1.1" 200 50
